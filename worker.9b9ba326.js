class Random{constructor(e){this.jSeed=536870911+e,this.kSeed=8388607+e}random(){var e=Math.floor(this.jSeed/53668);this.jSeed=40014*(this.jSeed-53668*e)-12211*e,this.jSeed<0&&(this.jSeed+=2147483563),e=Math.floor(this.kSeed/52774),this.kSeed=40692*(this.kSeed-52774*e)-3791*e,this.kSeed<0&&(this.kSeed+=2147483399);var t=this.jSeed-this.kSeed;return t<1&&(t+=2147483562),parseFloat(4.65661305739177e-10*parseFloat(t))}}function range(e,t){const a=t-e;return Array.from({length:a},((t,a)=>e+a))}function drop(e,t){if(0==t)return e;if(t>0){for(let a=0;a<t;a++)e.shift();return e}for(let a=0;a>t;a--)e.pop();return e}function windows(e,t,a){return e.map(((e,a,r)=>r.slice(a,a+t))).slice(0,-t+a)}function dot(e,t){return e.map(((a,r)=>e[r]*t[r])).reduce(((e,t)=>e+t))}function generateNoise(e){return 2*(function e(){let t=0,a=0;for(;0===t;)t=r.random();for(;0===a;)a=r.random();let n=Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*a);return n=n/10+.5,n>1||n<0?e():n}()-.5)*e}function singletrace(e,t,a,n,o,i,d,s,u){let l=0,c=0,f=n,m="",h=new Object,p=new Array(Math.floor(d/s));function g(e,t){for(;c<e;){for(let e in a)t[f][e]>0?h[e]=-Math.log(r.random())/t[f][e]:h[e]=d+1;let n=d+2;for(let e in a)h[e]<n&&(n=h[e],m=e);if(c+n<e){for(let e=l+1;e<=Math.floor((c+n)/s);e++)p[e]=-i*a[f]+generateNoise(u);f=m,c+=n,l=Math.floor(c/s)}else{for(let t=l+1;t<=Math.floor(e/s);t++)p[t]=-i*a[f]+generateNoise(u);c=e,l=Math.floor(c/s)}}}return p[l]=-i*a[f]+generateNoise(u),g(o,e),g(d,t),p}function tracetable(e,t,a,r,n,o,i,d,s,u){return range(0,o).map((()=>singletrace(e,t,a,r,n,i,d,s,u)))}function addvector(e,t){return e.map(((e,a)=>e+t[a]))}function meancurrent(e,t,a,r,n,o,i,d,s){return tracetable(e,t,a,r,n,o,i,d,s).reduce(((e,t)=>addvector(e,t))).map((e=>e/o))}function sumcurrent(e,t){return e.reduce(((e,t)=>addvector(e,t)))}function filtertest(e,t,a,r,n,o,i,d,s,u){let l=1/s,c=.1325/(u/s),f=Math.round(4*c),m=range(-f,f+1).map((e=>Math.exp(-e*e/(2*c*c))));m=m.map((e=>e/m.reduce(((e,t)=>e+t))));let h=new Array(f).fill(0).concat(meancurrent(t,a,r,n,o,e,i,d+f*l,l).map((t=>t*e)));return{unfilteredCurrent:drop(drop([...h],f),-f),filteredCurrent:windows([...h],1+2*f,1).map((e=>dot(e,m))),timeStep:l}}function peakEPSCs(e,t,a,r,n,o,i,d,s,u,l){let c=range(0,i).map((()=>filtertest(e,t,a,r,n,o,d,s,u,l).filteredCurrent.reduce(((e,t)=>Math.min(e,t))))),f=new Array(Math.round(1.5*-Math.min(...c))).fill(0);return c.forEach((e=>f[-Math.round(e)]++)),f.map((e=>e/f.reduce(((e,t)=>e+t))))}function mean(e){return e.reduce(((e,t)=>e+t))/e.length}function variance(e){let t=mean(e);return mean(e.map((e=>(e-t)*(e-t))))}function standardDeviation(e){return Math.sqrt(variance(e))}function CVdata(e,t,a,r){let n=[],o=function(e,t){return range(0,e).map((()=>sumcurrent(tracetable(t.qflatpulse,t.qPause,t.clist,t.initalState,t.duration,t.n,t.u,t.maxTime,t.timeStep,t.singlechannelNoise),t.n)))}(t,r);for(let e=0;e<o[0].length;e++){let t=[];for(let a=0;a<o.length;a++)t.push(o[a][e]);let a=mean(t),r=variance(t);variances.push({x:e,y:r}),means.push({x:e,y:a}),n[a]=r}return Object.keys(n).map((e=>({x:parseFloat(e),y:n[e]})))}onmessage=e=>{variances=[],means=[],r=new Random(e.data.randomSeed),e.data.singletraces=tracetable(e.data.qflatpulse,e.data.qPause,e.data.clist,e.data.initalState,e.data.duration,e.data.n,e.data.u,e.data.maxTime,e.data.timeStep,e.data.singlechannelNoise),e.data.meantrace=sumcurrent(e.data.singletraces,e.data.n),e.data.stderror=standardDeviation(e.data.meantrace)/Math.sqrt(e.data.n),e.data.CVdata=CVdata(e.data.n,e.data.ensembleSize,1,e.data),e.data.variances=variances,e.data.means=means,postMessage(e.data)};
//# sourceMappingURL=worker.9b9ba326.js.map
