class Random{constructor(){this.jSeed=536870911,this.kSeed=8388607}random(){var t=Math.floor(this.jSeed/53668);this.jSeed=40014*(this.jSeed-53668*t)-12211*t,this.jSeed<0&&(this.jSeed+=2147483563),t=Math.floor(this.kSeed/52774),this.kSeed=40692*(this.kSeed-52774*t)-3791*t,this.kSeed<0&&(this.kSeed+=2147483399);var e=this.jSeed-this.kSeed;return e<1&&(e+=2147483562),parseFloat(4.65661305739177e-10*parseFloat(e))}}function range(t,e){const i=e-t;return Array.from({length:i},((e,i)=>t+i))}function drop(t,e){if(0==e)return t;if(e>0){for(let i=0;i<e;i++)t.shift();return t}for(let i=0;i>e;i--)t.pop();return t}function windows(t,e,i){return t.map(((t,i,a)=>a.slice(i,i+e))).slice(0,-e+i)}function dot(t,e){return t.map(((i,a)=>t[a]*e[a])).reduce(((t,e)=>t+e))}function singletrace(t,e,i,a,s,n,u,l){let h=0,d=0,m=a,o="",p=new Object,c=new Array(Math.floor(u/l));function f(t,e){for(;d<t;){for(let t in i)e[m][t]>0?p[t]=-Math.log(r.random())/e[m][t]:p[t]=u+1;let a=u+2;for(let t in i)p[t]<a&&(a=p[t],o=t);if(d+a<t){for(let t=h+1;t<=Math.floor((d+a)/l);t++)c[t]=-n*i[m];m=o,d+=a,h=Math.floor(d/l)}else{for(let e=h+1;e<=Math.floor(t/l);e++)c[e]=-n*i[m];d=t,h=Math.floor(d/l)}}}return c[h]=-n*i[m],f(s,t),f(u,e),c}function tracetable(t,e,i,a,s,r,n,u,l){return range(0,r).map((()=>singletrace(t,e,i,a,s,n,u,l)))}function meancurrent(t,e,i,a,s,r,n,u,l){return tracetable(t,e,i,a,s,r,n,u,l).reduce(((t,e)=>function(t,e){return t.map(((t,i)=>t+e[i]))}(t,e))).map((t=>t/r))}function filtertest(t,e,i,a,s,r,n,u,l,h){let d=1/l,m=.1325/(h/l),o=Math.round(4*m),p=range(-o,o+1).map((t=>Math.exp(-t*t/(2*m*m))));p=p.map((t=>t/p.reduce(((t,e)=>t+e))));let c=new Array(o).fill(0).concat(meancurrent(e,i,a,s,r,t,n,u+o*d,d).map((e=>e*t)));return{unfilteredCurrent:drop(drop([...c],o),-o),filteredCurrent:windows([...c],1+2*o,1).map((t=>dot(t,p))),timeStep:d}}function peakEPSCs(t,e,i,a,s,r,n,u,l,h,d){let m=range(0,n).map((()=>filtertest(t,e,i,a,s,r,u,l,h,d).filteredCurrent.reduce(((t,e)=>Math.min(t,e))))),o=new Array(Math.round(1.5*-Math.min(...m))).fill(0);return m.forEach((t=>o[-Math.round(t)]++)),o.map((t=>t/o.reduce(((t,e)=>t+e))))}function qMatrix(t){return{C1:{C1:-1e5*t,C2:1e5*t,C3:0,O:0},C2:{C1:50,C2:-64,C3:4,O:10},C3:{C1:0,C2:.02,C3:-.02,O:0},O:{C1:0,C2:.5,C3:0,O:-.5}}}function drawTrace(t,e,i,a,s){return new Chart(document.getElementById(e),{type:"line",data:{labels:[...Array(t.length).keys()].map((t=>(t*i).toFixed(1))),datasets:[{label:"Current",data:t,pointRadius:0}]},options:{plugins:{title:{display:!0,text:a},legend:{display:!1},subtitle:{display:!0,text:`emsemble size = ${s.ensembleSize}, n = ${s.n}, duration = ${s.duration} ms, u = ${s.u}, max time = ${s.maxTime} ms, sampling frequency = ${s.samplingFrequency} kHz, cutoff frequency = ${s.cutoffFrequency} kHz`,padding:{bottom:20}}},scales:{y:{title:{display:!0,text:"Current (pA)"}},x:{title:{display:!0,text:"Time (ms)"}}}}})}function updateTrace(t,e,i,a){t.data.datasets[0].data=e,t.data.labels=[...Array(e.length).keys()].map((t=>(t*i).toFixed(1))),t.options.plugins.subtitle.text=`emsemble size = ${a.ensembleSize}, n = ${a.n}, duration = ${a.duration} ms, u = ${a.u}, max time = ${a.maxTime} ms, sampling frequency = ${a.samplingFrequency} kHz, cutoff frequency = ${a.cutoffFrequency} kHz`,t.update()}function drawHistrogram(t,e,i){return new Chart(document.getElementById(e),{type:"bar",data:{labels:[...Array(t.length).keys()],datasets:[{label:"Peak EPSC Frequency",data:t}]},options:{responsive:!0,plugins:{title:{display:!0,text:"Peak EPSC Amplitiude Distribution"},subtitle:{display:!0,text:`emsemble size = ${i.ensembleSize}, n = ${i.n}, duration = ${i.duration} ms, u = ${i.u}, max time = ${i.maxTime} ms, sampling frequency = ${i.samplingFrequency} kHz, cutoff frequency = ${i.cutoffFrequency} kHz`,padding:{bottom:20}},legend:{display:!1}},scales:{y:{title:{display:!0,text:"Frequency"}},x:{title:{display:!0,text:"Current (pA)"}}}}})}function updateHistogram(t,e,i){t.data.datasets[0].data=e,t.data.labels=[...Array(e.length).keys()],t.options.plugins.subtitle.text=`emsemble size = ${i.ensembleSize}, n = ${i.n}, duration = ${i.duration} ms, u = ${i.u}, max time = ${i.maxTime} ms, sampling frequency = ${i.samplingFrequency} kHz, cutoff frequency = ${i.cutoffFrequency} kHz`,t.update()}function defaultMetadata(){return{n:200,ensembleSize:100,samplingFrequency:40,cutoffFrequency:3,duration:1,u:.07,maxTime:10,height:.001,qMatrix:qMatrix,clist:{C1:0,C2:0,C3:0,O:8},initalState:"C1",timeStep:.02}}function defaultWatch(){return{n:"updateGraphs",ensembleSize:"updateGraphs",samplingFrequency:"updateGraphs",cutoffFrequency:"updateGraphs",duration:"updateGraphs",u:"updateGraphs",maxTime:"updateGraphs",height:"updateGraphs",clist:"updateGraphs",initalState:"updateGraphs",timeStep:"updateGraphs"}}function defaultMethods(){return{drawGraphs(){let t=peakEPSCs(this.ensembleSize,this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.n,this.u,this.maxTime,this.samplingFrequency,this.cutoffFrequency);window.histogram=drawHistrogram(t,"histogram",this),t=singletrace(this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.u,this.maxTime,this.timeStep),window.singlegraph=drawTrace(t,"singletrace",this.timeStep,"Single Trace",this),t=meancurrent(this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.n,this.u,this.maxTime,this.timeStep),window.meangraph=drawTrace(t,"meancurrent",this.timeStep,"Mean Current",this),t=filtertest(this.ensembleSize,this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.u,this.maxTime,this.samplingFrequency,this.cutoffFrequency),window.filtered=drawTrace(t.filteredCurrent,"filtered",t.timeStep,"Filtered Mean Current",this),window.unfiltered=drawTrace(t.unfilteredCurrent,"unfiltered",t.timeStep,"Unfiltered Mean Current",this)},updateGraphs(){let t=peakEPSCs(this.ensembleSize,this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.n,this.u,this.maxTime,this.samplingFrequency,this.cutoffFrequency);updateHistogram(histogram,t,this),t=singletrace(this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.u,this.maxTime,this.timeStep),updateTrace(singlegraph,t,this.timeStep,this),t=meancurrent(this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.n,this.u,this.maxTime,this.timeStep),updateTrace(meangraph,t,this.timeStep,this),t=filtertest(this.ensembleSize,this.qflatpulse,this.qPause,this.clist,this.initalState,this.duration,this.u,this.maxTime,this.samplingFrequency,this.cutoffFrequency),updateTrace(filtered,t.filteredCurrent,t.timeStep,this),updateTrace(unfiltered,t.unfilteredCurrent,t.timeStep,this)}}}function setSliderCallbacks(t){document.querySelectorAll("input[type='range']").forEach((e=>{e.addEventListener("input",(e=>{let i=e.target.id,a=e.target.value;t[i]=a}))}))}r=new Random;
//# sourceMappingURL=index.e2407325.js.map
