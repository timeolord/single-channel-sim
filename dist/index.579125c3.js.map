{"mappings":"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","sources":["src/index.js"],"sourcesContent":["//import { Chart } from 'chart.js/auto'\r\n\r\nfunction qMatrix(height) {\r\n  return {\r\n    \"C1\": {\"C1\": -100000.0*height, \"C2\": 100000.0*height, \"C3\": 0, \"O\": 0},\r\n    \"C2\": {\"C1\": 50, \"C2\": -64, \"C3\": 4, \"O\": 10},\r\n    \"C3\": {\"C1\": 0, \"C2\": 0.02, \"C3\": -0.02, \"O\": 0},\r\n    \"O\": {\"C1\": 0, \"C2\": 0.5, \"C3\": 0.0, \"O\": -0.5},\r\n  }\r\n}\r\n\r\nfunction drawTrace(data, elementID, timeStep, title, metadata){\r\n  return new Chart(\r\n    document.getElementById(elementID),\r\n    {\r\n      type: 'line',\r\n      data: {\r\n        labels: [...Array(data.length).keys()].map(x => (x * timeStep).toFixed(1)),\r\n        datasets: [\r\n          {\r\n            label: \"Current\",\r\n            data: data,\r\n            pointRadius: 0\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: title\r\n            },\r\n            legend: {\r\n                display: false\r\n            },\r\n            subtitle: {\r\n              display: true,\r\n              text: `emsemble size = ${metadata.ensembleSize}, n = ${metadata.n}, duration = ${metadata.duration} ms, u = ${metadata.u}, max time = ${metadata.maxTime} ms, sampling frequency = ${metadata.samplingFrequency} kHz, cutoff frequency = ${metadata.cutoffFrequency} kHz`,\r\n              padding: {\r\n                bottom: 20\r\n              }\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            title: {\r\n              display: true,\r\n              text: 'Current (pA)'\r\n            }\r\n          },\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Time (ms)'\r\n            }\r\n          },\r\n        }\r\n      }\r\n    }\r\n  )\r\n}\r\nfunction updateTrace(chart, data, timeStep, metadata){\r\n  chart.data.datasets[0].data = data\r\n  chart.data.labels = [...Array(data.length).keys()].map(x => (x * timeStep).toFixed(1))\r\n  chart.options.plugins.subtitle.text = `emsemble size = ${metadata.ensembleSize}, n = ${metadata.n}, duration = ${metadata.duration} ms, u = ${metadata.u}, max time = ${metadata.maxTime} ms, sampling frequency = ${metadata.samplingFrequency} kHz, cutoff frequency = ${metadata.cutoffFrequency} kHz`\r\n  chart.update()\r\n}\r\nfunction drawHistrogram(data, elementID, metadata){\r\n  return new Chart(\r\n    document.getElementById(elementID),\r\n    {\r\n      type: 'bar',\r\n      data: {\r\n        labels: [...Array(data.length).keys()],\r\n        datasets: [\r\n          {\r\n            label: `Peak EPSC Frequency`,\r\n            data: data\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: `Peak EPSC Amplitiude Distribution`\r\n            },\r\n            subtitle: {\r\n                display: true,\r\n                text: `emsemble size = ${metadata.ensembleSize}, n = ${metadata.n}, duration = ${metadata.duration} ms, u = ${metadata.u}, max time = ${metadata.maxTime} ms, sampling frequency = ${metadata.samplingFrequency} kHz, cutoff frequency = ${metadata.cutoffFrequency} kHz`,\r\n                padding: {\r\n                  bottom: 20\r\n                }\r\n            },\r\n            legend: {\r\n              display: false\r\n            }\r\n        },\r\n        scales: {\r\n          y: {\r\n            title: {\r\n              display: true,\r\n              text: 'Frequency'\r\n            }\r\n          },\r\n          x: {\r\n            title: {\r\n              display: true,\r\n              text: 'Current (pA)'\r\n            }\r\n          },\r\n        }\r\n      }\r\n    }\r\n  )\r\n}\r\nfunction updateHistogram(chart, data, metadata){\r\n  chart.data.datasets[0].data = data\r\n  chart.data.labels = [...Array(data.length).keys()]\r\n  chart.options.plugins.subtitle.text = `emsemble size = ${metadata.ensembleSize}, n = ${metadata.n}, duration = ${metadata.duration} ms, u = ${metadata.u}, max time = ${metadata.maxTime} ms, sampling frequency = ${metadata.samplingFrequency} kHz, cutoff frequency = ${metadata.cutoffFrequency} kHz`\r\n  chart.update()\r\n}\r\nfunction defaultMetadata(){\r\n  return {\r\n    n: 200,\r\n    ensembleSize: 100,\r\n    samplingFrequency: 40,\r\n    cutoffFrequency: 3,\r\n    duration: 1,\r\n    u: 0.07,\r\n    maxTime: 10,\r\n    height: 0.001,\r\n    qMatrix: qMatrix,\r\n    clist: {\r\n      \"C1\": 0,\r\n      \"C2\": 0,\r\n      \"C3\": 0,\r\n      \"O\": 8\r\n    },\r\n    initalState: \"C1\",\r\n    timeStep: 0.02\r\n  }\r\n}\r\nfunction defaultWatch(){\r\n  return {\r\n    n: \"updateGraphs\",\r\n    ensembleSize: \"updateGraphs\",\r\n    samplingFrequency:  \"updateGraphs\",\r\n    cutoffFrequency: \"updateGraphs\",\r\n    duration: \"updateGraphs\",\r\n    u: \"updateGraphs\",\r\n    maxTime: \"updateGraphs\",\r\n    height: \"updateGraphs\", //TODO\r\n    clist: \"updateGraphs\",\r\n    initalState: \"updateGraphs\",\r\n    timeStep: \"updateGraphs\"\r\n  }\r\n}\r\nfunction defaultMethods(){\r\n  return {\r\n    drawGraphs() {\r\n      let data = peakEPSCs(this.ensembleSize, this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.n, this.u, this.maxTime, this.samplingFrequency, this.cutoffFrequency)\r\n      window.histogram = drawHistrogram(data, \"histogram\", this)\r\n\r\n      //data = singletrace(this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.u, this.maxTime, this.timeStep)\r\n      //window.singlegraph = drawTrace(data, \"singletrace\", this.timeStep, \"Single Trace\", this)\r\n\r\n      data = meancurrent(this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.n, this.u, this.maxTime, this.timeStep)\r\n      window.meangraph = drawTrace(data, \"meancurrent\", this.timeStep, \"Mean Current\", this)\r\n\r\n      //data = filtertest(this.ensembleSize, this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.u, this.maxTime, this.samplingFrequency, this.cutoffFrequency)\r\n      //window.filtered = drawTrace(data.filteredCurrent, \"filtered\", data.timeStep, \"Filtered Mean Current\", this)\r\n      //window.unfiltered = drawTrace(data.unfilteredCurrent, \"unfiltered\", data.timeStep, \"Unfiltered Mean Current\", this)\r\n    },\r\n    updateGraphs() {\r\n      let data = peakEPSCs(this.ensembleSize, this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.n, this.u, this.maxTime, this.samplingFrequency, this.cutoffFrequency)\r\n      updateHistogram(histogram, data, this)\r\n\r\n      //data = singletrace(this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.u, this.maxTime, this.timeStep)\r\n      //updateTrace(singlegraph, data, this.timeStep, this)\r\n\r\n      data = meancurrent(this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.n, this.u, this.maxTime, this.timeStep)\r\n      updateTrace(meangraph, data, this.timeStep, this)\r\n\r\n      //data = filtertest(this.ensembleSize, this.qflatpulse, this.qPause, this.clist, this.initalState, this.duration, this.u, this.maxTime, this.samplingFrequency, this.cutoffFrequency)\r\n      //updateTrace(filtered, data.filteredCurrent, data.timeStep, this)\r\n      //updateTrace(unfiltered, data.unfilteredCurrent, data.timeStep, this)\r\n    }\r\n  }\r\n}\r\nfunction setSliderCallbacks(metadata){\r\n  let sliders = document.querySelectorAll(\"input[type='range']\")\r\n  sliders.forEach((slider) => {\r\n    slider.addEventListener(\"input\", (event) => {\r\n      let id = event.target.id\r\n      let value = event.target.value\r\n      metadata[id] = value\r\n    })\r\n  })\r\n}\r\nif (window.Worker) {\r\n  \r\n}\r\n\r\n//(async function() {\r\n//  slider = document.getElementById(\"nRange\");\r\n//  slider.oninput = function() {\r\n//    output.innerHTML = this.value;\r\n//  }\r\n//})()\r\n\r\n//(async function() {\r\n//  let height = 0.001;\r\n//  let duration = 1;\r\n//  let u = 0.07;\r\n//  let tmax = 10;\r\n//  let tstep = 0.2;\r\n//  \r\n//  let qflatpulse = qMatrix(height)\r\n//  let qPause = qMatrix(0)\r\n//  let clist = {\r\n//    \"C1\": 0,\r\n//    \"C2\": 0,\r\n//    \"C3\": 0,\r\n//    \"O\": 8\r\n//  }\r\n//  let initalState = \"C1\";\r\n//  let n = 200\r\n//  let s = meancurrent(qflatpulse, qPause, clist, initalState, duration, n, u, tmax, tstep)\r\n//  let ensembleSize = 100\r\n//  let samplingFrequency = 40\r\n//  let cutoffFrequency = 3\r\n//\r\n//  let filtertestData = filtertest(ensembleSize, qflatpulse, qPause, clist, initalState, duration, u, tmax, samplingFrequency, cutoffFrequency)\r\n//  drawTrace(filtertestData.filteredCurrent, \"filtered\", filtertestData.timeStep, \"Filtered Mean Currents\")\r\n//  drawTrace(filtertestData.unfilteredCurrent, \"unfiltered\", filtertestData.timeStep, \"Unfiltered Mean Currents\")\r\n//  let singletraceData = singletrace(qflatpulse, qPause, clist, initalState, duration, u, tmax, tstep)\r\n//  drawTrace(singletraceData, \"singletrace\", tstep, \"Single Trace Current\")\r\n//  let meancurrentData = meancurrent(qflatpulse, qPause, clist, initalState, duration, n, u, tmax, tstep)\r\n//  drawTrace(meancurrentData, \"meancurrent\", tstep, \"Mean Current\")\r\n//})()"],"names":[],"version":3,"file":"index.579125c3.js.map","sourceRoot":"/__parcel_source_root/"}